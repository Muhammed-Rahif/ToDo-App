{"version":3,"sources":["components/ToDoCard/ToDoCard.jsx","components/FAB/FAB.jsx","helpers/constants.js","components/CreateToDoModal/CreateToDoModal.jsx","helpers/helper.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["ToDoCard","title","description","style","boxColor","section","className","background","FAB","onClick","button","bgColors","CreateToDoModal","onClose","onSubmit","modelStyle","bgStyle","useState","setTitle","setDescription","div","e","preventDefault","modified","Date","formatedModDate","moment","format","Math","floor","random","length","aria-label","type","placeholder","value","onChange","target","required","rows","TODOS_LOCALSTORAGE_KEY","store","addPlugin","operationsPlugin","defaultsPlugin","defaults","App","createToDoModel","setCreateToDoModel","get","toDosList","setToDosList","showNotification","setShowNotification","items","from","scale","opacity","y","window","innerHeight","enter","config","duration","easing","easeBackInOut","overshoot","trail","toDo","zIndex","to","styles","article","href","toDoData","id","uuidv4","unshift","addNewToDo","prev","delay","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4051d90a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ToDoCard.css\";\nimport { animated } from \"react-spring\";\n\nfunction ToDoCard({\n  title = \"\",\n  description = \"\",\n  style = {},\n  boxColor = \"#fff\",\n}) {\n  return (\n    <animated.section\n      style={style}\n      className=\"is-flex is-justify-content-center is-align-items-center is-flex-direction-column m-5 is-relative\"\n    >\n      <div\n        style={{ background: boxColor }}\n        className=\"is-light is-relative tile box is-flex is-justify-content-center is-align-items-flex-start is-flex-direction-column\"\n      >\n        <h1 className=\"title is-4\">{title}</h1>\n        <h2 className=\"subtitle is-5\">{description}</h2>\n      </div>\n    </animated.section>\n  );\n}\n\nexport default ToDoCard;\n","import React from \"react\";\nimport \"./FAB.css\";\nimport {animated} from \"react-spring\";\n\nfunction FAB({onClick, style = {}}) {\n  return (\n    <animated.button\n      style={style}\n      className=\"button fab box is-primary\"\n      onClick={onClick}\n    >\n      <i className=\"fas fa-plus\"></i>\n    </animated.button>\n  );\n}\n\nexport default FAB;\n","const bgColors = [\n  \"linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)\",\n  \"linear-gradient(135deg, #c3cfe2 0%, #c3cfe2 100%)\",\n  \"linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)\",\n  \"linear-gradient(135deg, #f093fb 0%, #f5576c 100%)\",\n  \"linear-gradient(135deg, #5ee7df 0%, #b490ca 100%)\",\n  \"linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)\",\n  \"linear-gradient(135deg, #ebc0fd 0%, #d9ded8 100%)\",\n  \"linear-gradient(120deg, #f6d365 0%, #fda085 100%)\",\n  \"linear-gradient(to top, #96fbc4 0%, #f9f586 100%)\",\n];\n\nexport { bgColors };\n","import React, { useState } from \"react\";\nimport \"./CreateToDoModal.css\";\nimport moment from \"moment\";\nimport { animated } from \"react-spring\";\nimport { bgColors } from \"../../helpers/constants\";\n\nfunction CreateToDoModal({ onClose, onSubmit, modelStyle = {}, bgStyle = {} }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  return (\n    <div className=\"modal is-active is-clipped\">\n      <animated.div style={bgStyle} className=\"modal-background\"></animated.div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onSubmit({\n            title,\n            description,\n            modified: new Date(),\n            formatedModDate: moment().format(\"lll\"),\n            boxColor: bgColors[Math.floor(Math.random() * bgColors.length)],\n          });\n          setTitle(\"\");\n          setDescription(\"\");\n        }}\n      >\n        <animated.div style={modelStyle} className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">\n              <b>Create To Do</b>\n            </p>\n            <button\n              className=\"delete\"\n              onClick={onClose}\n              aria-label=\"close\"\n              type=\"button\"\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Title...\"\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              required\n            />\n            <textarea\n              className=\"textarea mt-5\"\n              placeholder=\"Description...\"\n              rows=\"12\"\n              onChange={e => setDescription(e.target.value)}\n              value={description}\n              required\n            ></textarea>\n          </section>\n          <footer className=\"modal-card-foot is-flex is-justify-content-flex-end\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                onClose();\n                setTitle(\"\");\n                setDescription(\"\");\n              }}\n              type=\"reset\"\n            >\n              Cancel\n            </button>\n            <button className=\"button is-success\" type=\"submit\">\n              Save To Do\n            </button>\n          </footer>\n        </animated.div>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateToDoModal;\n","import store from \"store\";\nimport operationsPlugin from \"store/plugins/operations\";\nimport defaultsPlugin from \"store/plugins/defaults\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Localstorage key\nconst TODOS_LOCALSTORAGE_KEY = \"toDosList\";\n\n// Local storage configurations\nstore.addPlugin([operationsPlugin, defaultsPlugin]);\nstore.defaults(TODOS_LOCALSTORAGE_KEY, []);\n\n// Helper functions\n\nconst addNewToDo = (toDoData) => {\n  toDoData.id = uuidv4();\n  store.unshift(TODOS_LOCALSTORAGE_KEY, toDoData);\n};\n\nconst getToDos = () => store.get(TODOS_LOCALSTORAGE_KEY) || [];\n\nexport { addNewToDo, getToDos };\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bulma/css/bulma.min.css\";\nimport ToDoCard from \"./components/ToDoCard/ToDoCard\";\nimport FAB from \"./components/FAB/FAB\";\nimport CreateToDoModal from \"./components/CreateToDoModal/CreateToDoModal\";\nimport { addNewToDo, getToDos } from \"./helpers/helper\";\nimport { Spring, animated, Transition } from \"react-spring\";\nimport { easeBackInOut } from \"d3-ease\";\n\nfunction App() {\n  const [createToDoModel, setCreateToDoModel] = useState(false);\n  const [toDosList, setToDosList] = useState(getToDos());\n  const [showNotification, setShowNotification] = useState(true);\n\n  return (\n    <div className=\"container\">\n      {toDosList.length > 0 ? (\n        <Transition\n          items={toDosList}\n          from={{\n            scale: 0.7,\n            opacity: 0,\n            y: window.innerHeight * 0.7,\n          }}\n          enter={{\n            scale: 1,\n            opacity: 1,\n            y: 0,\n          }}\n          config={{ duration: 750, easing: easeBackInOut.overshoot(1.7) }}\n          trail={100}\n        >\n          {(style, toDo) =>\n            toDo && <ToDoCard style={{ ...style, zIndex: 30 }} {...toDo} />\n          }\n        </Transition>\n      ) : (\n        <Spring\n          from={{\n            scale: 0.7,\n            opacity: 0,\n          }}\n          to={{ scale: 1, opacity: 1 }}\n          config={{ duration: 500, easing: easeBackInOut.overshoot(1.7) }}\n        >\n          {styles => (\n            <animated.article\n              className=\"message mt-5 is-warning mr-5 ml-5\"\n              style={styles}\n              onClick={() => setShowNotification(!showNotification)}\n            >\n              <div className=\"message-header\">\n                <p>You don't have any todos..!</p>\n              </div>\n              <div className=\"message-body\">\n                <strong>\n                  You didn't created atleast one to do... Maybe you are first\n                  time here.. Don't worry..!{\" \"}\n                  <a\n                    href=\"./\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setCreateToDoModel(!createToDoModel);\n                    }}\n                  >\n                    Create one\n                  </a>{\" \"}\n                  to do now..\n                </strong>\n              </div>\n            </animated.article>\n          )}\n        </Spring>\n      )}\n      <Spring\n        from={{ scale: 0.7, opacity: 0 }}\n        to={{\n          scale: createToDoModel ? 1 : 0.7,\n          opacity: createToDoModel ? 1 : 0,\n          zIndex: createToDoModel ? 99 : -99,\n          y: createToDoModel ? 0 : 500,\n        }}\n        config={{ duration: 500, easing: easeBackInOut.overshoot(1.7) }}\n      >\n        {style => (\n          <CreateToDoModal\n            bgStyle={{\n              opacity: style.opacity,\n              zIndex: style.zIndex,\n            }}\n            modelStyle={style}\n            onClose={() => setCreateToDoModel(false)}\n            onSubmit={toDoData => {\n              addNewToDo(toDoData);\n              setCreateToDoModel(false);\n              setToDosList(prev => [toDoData, ...prev]);\n            }}\n          />\n        )}\n      </Spring>\n      <Spring\n        from={{ scale: 0.7, opacity: 0 }}\n        to={{ scale: 1, opacity: 1 }}\n        delay={800}\n        config={{\n          duration: 500,\n          easing: easeBackInOut.overshoot(2.5),\n        }}\n      >\n        {styles => (\n          <FAB\n            style={{ ...styles, zIndex: createToDoModel ? 30 : 70 }}\n            onClick={() => setCreateToDoModel(!createToDoModel)}\n          />\n        )}\n      </Spring>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { bgColors } from \"./helpers/constants\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div\n      style={{\n        background: bgColors[Math.floor(Math.random() * bgColors.length)],\n      }}\n      className=\"body-background pt-1 pb-1\"\n    >\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}