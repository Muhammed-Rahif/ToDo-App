{"version":3,"sources":["helpers/helper.js","components/ToDoCard/ToDoCard.jsx","components/FAB/FAB.jsx","helpers/constants.js","components/CreateToDoModal/CreateToDoModal.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["TODOS_LOCALSTORAGE_KEY","store","addPlugin","operationsPlugin","defaultsPlugin","defaults","getToDos","get","ToDoCard","id","title","description","finished","style","boxColor","onRemove","delay","useState","toDoFinished","setToDoFinished","console","log","btns","btnColor","btnAnimations","useSprings","map","btn","from","scale","opacity","to","config","duration","easing","easeBackInOut","overshoot","section","className","background","items","split","initial","clipPath","enter","textDecoration","filter","update","trail","keys","item","key","letter","trans","indx","span","height","div","button","onClick","set","toDo","dltToDo","toDos","changeToDoFinished","FAB","bgColors","CreateToDoModal","onClose","onSubmit","modelStyle","bgStyle","setTitle","setDescription","e","preventDefault","modified","Date","formatedModDate","moment","format","Math","floor","random","length","uuidv4","aria-label","type","placeholder","value","onChange","target","required","maxLength","rows","App","createToDoModel","setCreateToDoModel","toDosList","setToDosList","showNotification","setShowNotification","onToDoDeleteHandler","y","window","innerHeight","leave","t","zIndex","styles","article","href","toDoData","unshift","addNewToDo","prev","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b6cdb54.chunk.js","sourcesContent":["import store from \"store\";\nimport operationsPlugin from \"store/plugins/operations\";\nimport defaultsPlugin from \"store/plugins/defaults\";\n\n// Localstorage key\nconst TODOS_LOCALSTORAGE_KEY = \"toDosList\";\n\n// Local storage configurations\nstore.addPlugin([operationsPlugin, defaultsPlugin]);\nstore.defaults(TODOS_LOCALSTORAGE_KEY, []);\n\n// Helper functions\n\nconst addNewToDo = toDoData => {\n  store.unshift(TODOS_LOCALSTORAGE_KEY, toDoData);\n};\n\nconst getToDos = () => store.get(TODOS_LOCALSTORAGE_KEY) || [];\n\nconst dltToDo = id =>\n  store.set(\n    TODOS_LOCALSTORAGE_KEY,\n    getToDos().filter(toDo => toDo.id !== id)\n  );\n\nconst changeToDoFinished = (id, finished) =>\n  store.update(TODOS_LOCALSTORAGE_KEY, toDos =>\n    toDos.map(toDo => (toDo.id === id ? { ...toDo, finished } : toDo))\n  );\n\nexport { addNewToDo, getToDos, dltToDo, changeToDoFinished };\n","import React, { useState } from \"react\";\nimport \"./ToDoCard.css\";\nimport { animated, Spring, Transition, useSprings } from \"react-spring\";\nimport { easeBackInOut } from \"d3-ease\";\nimport { changeToDoFinished, dltToDo } from \"../../helpers/helper\";\n\nfunction ToDoCard({\n  id,\n  title = \"\",\n  description = \"\",\n  finished,\n  style = {},\n  boxColor = \"#fff\",\n  onRemove,\n  delay = 500,\n}) {\n  const [toDoFinished, setToDoFinished] = useState(finished);\n  console.log({ finished, toDoFinished });\n  const btns = [\n    { btnColor: \"success\", delay: delay + 250 },\n    { btnColor: \"danger\", delay: delay + 500 },\n  ];\n\n  const btnAnimations = useSprings(\n    2,\n    btns.map(btn => ({\n      from: { scale: 0.7, opacity: 0 },\n      to: {\n        scale: 1,\n        opacity: 1,\n      },\n      config: { duration: 750, easing: easeBackInOut.overshoot(1.7) },\n      delay: btn.delay,\n    }))\n  );\n\n  return (\n    <animated.section\n      style={{ ...style, opacity: toDoFinished ? 0.45 : 1 }}\n      className=\"is-flex is-justify-content-center is-align-items-center is-flex-direction-column m-5 is-relative\"\n    >\n      <div\n        style={{ background: boxColor }}\n        className=\"is-light is-relative tile box is-flex is-justify-content-center is-align-items-flex-start is-flex-direction-column\"\n      >\n        <h1 className=\"title is-4\">\n          <Transition\n            items={title.split(\"\")}\n            initial={{ clipPath: \"polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)\" }}\n            enter={{\n              clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\n              textDecoration: toDoFinished && \"line-through\",\n              filter: toDoFinished ? \"blur(1.5px)\" : \"blur(0px)\",\n            }}\n            update={{\n              textDecoration: toDoFinished && \"line-through\",\n              filter: toDoFinished ? \"blur(1.5px)\" : \"blur(0px)\",\n            }}\n            delay={delay}\n            trail={25}\n            keys={(item, key) => key}\n            config={{ easing: easeBackInOut.overshoot(1.7) }}\n          >\n            {(style, letter, trans, indx) => (\n              <animated.span key={indx} style={style}>\n                {letter}\n              </animated.span>\n            )}\n          </Transition>\n        </h1>\n        <h2 className=\"subtitle is-5 description\">\n          <Transition\n            items={description.split(\"\")}\n            initial={{ clipPath: \"polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)\" }}\n            enter={{\n              clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\n              textDecoration: toDoFinished && \"line-through\",\n              filter: toDoFinished ? \"blur(1.5px)\" : \"blur(0px)\",\n            }}\n            update={{\n              textDecoration: toDoFinished && \"line-through\",\n              filter: toDoFinished ? \"blur(1.5px)\" : \"blur(0px)\",\n            }}\n            delay={delay}\n            trail={5}\n            keys={(item, key) => key}\n            config={{ easing: easeBackInOut.overshoot(1.7) }}\n          >\n            {(style, letter, trans, indx) => (\n              <animated.span key={indx} style={style}>\n                {letter}\n              </animated.span>\n            )}\n          </Transition>\n        </h2>\n        <Spring\n          from={{ height: \"0px\" }}\n          to={{ height: \"40px\" }}\n          config={{ duration: 1000, easing: easeBackInOut.overshoot(1.7) }}\n          delay={delay}\n        >\n          {style => (\n            <animated.div\n              style={style}\n              className=\"is-flex is-justify-content-flex-end is-flex-direction-row columns w-100\"\n            >\n              {btnAnimations.map((style, indx) => (\n                <animated.button\n                  style={style}\n                  className={`button is-${indx === 0 ? \"danger\" : \"success\"} ml-1`}\n                  onClick={() => {\n                    if (indx === 0) {\n                      onRemove(id);\n                      dltToDo(id);\n                    } else {\n                      changeToDoFinished(id, !toDoFinished);\n                      setToDoFinished(!toDoFinished);\n                    }\n                  }}\n                  key={indx}\n                >\n                  <i\n                    className={`fas fa-${\n                      indx === 0 ? \"trash\" : toDoFinished ? \"undo\" : \"check\"\n                    }`}\n                  ></i>\n                </animated.button>\n              ))}\n            </animated.div>\n          )}\n        </Spring>\n      </div>\n    </animated.section>\n  );\n}\n\nexport default ToDoCard;\n","import React from \"react\";\nimport \"./FAB.css\";\nimport { animated } from \"react-spring\";\n\nfunction FAB({ onClick, style = {} }) {\n  return (\n    <animated.button style={style} className=\"button fab box is-primary\" onClick={onClick}>\n      <i className=\"fas fa-plus\"></i>\n    </animated.button>\n  );\n}\n\nexport default FAB;\n","const bgColors = [\n  \"linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)\",\n  \"linear-gradient(135deg, #c3cfe2 0%, #c3cfe2 100%)\",\n  \"linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)\",\n  \"linear-gradient(135deg, #f093fb 0%, #f5576c 100%)\",\n  \"linear-gradient(135deg, #5ee7df 0%, #b490ca 100%)\",\n  \"linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)\",\n  \"linear-gradient(135deg, #ebc0fd 0%, #d9ded8 100%)\",\n  \"linear-gradient(120deg, #f6d365 0%, #fda085 100%)\",\n  \"linear-gradient(to top, #96fbc4 0%, #f9f586 100%)\",\n];\n\nexport { bgColors };\n","import React, { useState } from \"react\";\nimport \"./CreateToDoModal.css\";\nimport moment from \"moment\";\nimport { animated } from \"react-spring\";\nimport { bgColors } from \"../../helpers/constants\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction CreateToDoModal({ onClose, onSubmit, modelStyle = {}, bgStyle = {} }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  return (\n    <div className=\"modal is-active is-clipped\">\n      <animated.div style={bgStyle} className=\"modal-background\"></animated.div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onSubmit({\n            title,\n            description,\n            modified: new Date(),\n            formatedModDate: moment().format(\"lll\"),\n            boxColor: bgColors[Math.floor(Math.random() * bgColors.length)],\n            id: uuidv4(),\n            finished: false,\n          });\n          setTitle(\"\");\n          setDescription(\"\");\n        }}\n      >\n        <animated.div style={modelStyle} className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">\n              <b>Create To Do</b>\n            </p>\n            <button\n              className=\"delete\"\n              onClick={onClose}\n              aria-label=\"close\"\n              type=\"button\"\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Title...\"\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              required\n              maxLength={120}\n            />\n            <textarea\n              className=\"textarea mt-5\"\n              placeholder=\"Description...\"\n              rows=\"12\"\n              onChange={e => setDescription(e.target.value)}\n              value={description}\n              required\n            ></textarea>\n          </section>\n          <footer className=\"modal-card-foot is-flex is-justify-content-flex-end\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                onClose();\n                setTitle(\"\");\n                setDescription(\"\");\n              }}\n              type=\"reset\"\n            >\n              Cancel\n            </button>\n            <button className=\"button is-primary\" type=\"submit\">\n              Save To Do\n            </button>\n          </footer>\n        </animated.div>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateToDoModal;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bulma/css/bulma.min.css\";\nimport ToDoCard from \"./components/ToDoCard/ToDoCard\";\nimport FAB from \"./components/FAB/FAB\";\nimport CreateToDoModal from \"./components/CreateToDoModal/CreateToDoModal\";\nimport { addNewToDo, getToDos } from \"./helpers/helper\";\nimport { Spring, animated, Transition } from \"react-spring\";\nimport { easeBackInOut } from \"d3-ease\";\n\nfunction App() {\n  const [createToDoModel, setCreateToDoModel] = useState(false);\n  const [toDosList, setToDosList] = useState(getToDos());\n  const [showNotification, setShowNotification] = useState(true);\n\n  const onToDoDeleteHandler = id => {\n    setToDosList(toDosList.filter(toDo => toDo.id !== id));\n  };\n\n  return (\n    <div className=\"container\">\n      {toDosList.length > 0 ? (\n        <Transition\n          items={toDosList}\n          from={{\n            scale: 0.7,\n            opacity: 0,\n            y: window.innerHeight * 0.7,\n            height: \"0px\",\n          }}\n          enter={{\n            scale: 1,\n            opacity: 1,\n            y: 0,\n            height: \"auto\",\n          }}\n          leave={{\n            scale: 0.7,\n            opacity: 0,\n            filter: \"blur(4px)\",\n            height: \"min-content\",\n          }}\n          config={{ duration: 750, easing: easeBackInOut.overshoot(1.7) }}\n          trail={100}\n        >\n          {(style, toDo, t, indx) =>\n            toDo && (\n              <ToDoCard\n                style={{ ...style, zIndex: 30 }}\n                {...toDo}\n                key={indx}\n                onRemove={onToDoDeleteHandler}\n                delay={250 * indx + 500}\n              />\n            )\n          }\n        </Transition>\n      ) : (\n        <Spring\n          from={{\n            scale: 0.7,\n            opacity: 0,\n          }}\n          to={{ scale: 1, opacity: 1 }}\n          config={{ duration: 500, easing: easeBackInOut.overshoot(1.7) }}\n        >\n          {styles => (\n            <animated.article\n              className=\"message mt-5 is-warning mr-5 ml-5\"\n              style={styles}\n              onClick={() => setShowNotification(!showNotification)}\n            >\n              <div className=\"message-header\">\n                <p>You don't have any todos..!</p>\n              </div>\n              <div className=\"message-body\">\n                <strong>\n                  You didn't created atleast one to do... Maybe you are first time here.. Don't\n                  worry..!{\" \"}\n                  <a\n                    href=\"./\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setCreateToDoModel(!createToDoModel);\n                    }}\n                  >\n                    Create one\n                  </a>{\" \"}\n                  to do now..\n                </strong>\n              </div>\n            </animated.article>\n          )}\n        </Spring>\n      )}\n      <Spring\n        from={{ scale: 0.7, opacity: 0 }}\n        to={{\n          scale: createToDoModel ? 1 : 0.7,\n          opacity: createToDoModel ? 1 : 0,\n          zIndex: createToDoModel ? 99 : -99,\n          y: createToDoModel ? 0 : 500,\n        }}\n        config={{ duration: 500, easing: easeBackInOut.overshoot(1.7) }}\n      >\n        {style => (\n          <CreateToDoModal\n            bgStyle={{\n              opacity: style.opacity,\n              zIndex: style.zIndex,\n            }}\n            modelStyle={style}\n            onClose={() => setCreateToDoModel(false)}\n            onSubmit={toDoData => {\n              addNewToDo(toDoData);\n              setCreateToDoModel(false);\n              setToDosList(prev => [toDoData, ...prev]);\n            }}\n          />\n        )}\n      </Spring>\n      <Spring\n        from={{ scale: 0.7, opacity: 0 }}\n        to={{ scale: 1, opacity: 1 }}\n        delay={1450}\n        config={{\n          duration: 500,\n          easing: easeBackInOut.overshoot(2.5),\n        }}\n      >\n        {styles => (\n          <FAB\n            style={{ ...styles, zIndex: createToDoModel ? 30 : 70 }}\n            onClick={() => setCreateToDoModel(!createToDoModel)}\n          />\n        )}\n      </Spring>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { bgColors } from \"./helpers/constants\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div\n      style={{\n        background: bgColors[Math.floor(Math.random() * bgColors.length)],\n      }}\n      className=\"body-background pt-1 pb-1\"\n    >\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}